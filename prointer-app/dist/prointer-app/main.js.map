{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routing.module.ts","webpack:///./src/app/cadastropaciente/cadastropaciente.component.css","webpack:///./src/app/cadastropaciente/cadastropaciente.component.html","webpack:///./src/app/cadastropaciente/cadastropaciente.component.ts","webpack:///./src/app/config/api.config.ts","webpack:///./src/app/config/storage_keys.config.ts","webpack:///./src/app/dialog/dialog.component.css","webpack:///./src/app/dialog/dialog.component.html","webpack:///./src/app/dialog/dialog.component.ts","webpack:///./src/app/guard/home.auth.guard.ts","webpack:///./src/app/header/header.component.css","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.css","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/interceptors/auth.interceptor.ts","webpack:///./src/app/login/login.component.css","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/material.module.ts","webpack:///./src/app/medico/medico.component.css","webpack:///./src/app/medico/medico.component.html","webpack:///./src/app/medico/medico.component.ts","webpack:///./src/app/paciente/paciente.component.css","webpack:///./src/app/paciente/paciente.component.html","webpack:///./src/app/paciente/paciente.component.ts","webpack:///./src/app/services/home.service.ts","webpack:///./src/app/services/medico.service.ts","webpack:///./src/app/services/oauth.service.ts","webpack:///./src/app/services/paciente.service.ts","webpack:///./src/app/services/storage.service.ts","webpack:///./src/app/services/usuario.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":";;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE;AACF;AACA,4CAA4C,WAAW;AACvD;AACA;AACA,4E;;;;;;;;;;;ACZA,mB;;;;;;;;;;;ACAA,+E;;;;;;;;;;;;;;;;;;;;;ACA0C;AAO1C;IALA;QAME,UAAK,GAAG,KAAK,CAAC;IAChB,CAAC;IAFY,YAAY;QALxB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;OACW,YAAY,CAExB;IAAD,mBAAC;CAAA;AAFwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACPqC;AACJ;AACE;AACN;AACM;AACF;AACjB;AACyB;AACV;AACA;AACT;AACU;AACH;AACC;AACK;AACc;AAEvB;AAC4B;AACb;AAMrB;AACe;AAC8B;AAElC;AAqExD;IAAA;IAAyB,CAAC;IAAb,SAAS;QAlErB,8DAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,4DAAY;gBACZ,wEAAe;gBACf,sEAAc;gBACd,mEAAa;gBACb,+EAAiB;gBACjB,yEAAe;gBACf,uGAAyB;aAC1B;YACD,OAAO,EAAE;gBACP,uEAAa;gBACb,oEAAgB;gBAChB,0DAAW;gBACX,qEAAgB;gBAChB,gEAAc;gBACd,iEAAc;gBACd,6FAAuB;gBACvB,kEAAe;gBACf,kEAAmB;gBAEnB,wEAAqB;gBAErB,kEAAe;gBACf,wEAAqB;gBACrB,gEAAa;gBACb,oEAAiB;gBACjB,iEAAc;gBACd,sEAAmB;gBACnB,mEAAgB;gBAChB,qEAAkB;gBAClB,oEAAiB;gBACjB,gEAAa;gBACb,gEAAa;gBACb,gEAAa;gBACb,sEAAmB;gBACnB,qEAAkB;gBAClB,uEAAoB;gBACpB,2EAAwB;gBACxB,iEAAc;gBACd,kEAAe;gBACf,kEAAe;gBACf,mEAAgB;gBAChB,kEAAe;gBACf,uEAAoB;gBACpB,oEAAiB;gBACjB,gEAAa;gBACb,mEAAgB;gBAChB,iEAAc;gBACd,gEAAa;gBACb,mEAAgB;gBAChB,mEAAgB;aACjB;YACD,SAAS,EAAE;gBACT,kEAAW;gBACX,0EAAe;gBACf,sEAAa;gBACb,oEAAW;gBACX,yEAAc;gBACd,wEAAc;gBACd,uFAAuB;gBACvB,qEAAa;aACd;YACD,SAAS,EAAE,CAAC,4DAAY,CAAC;YACzB,eAAe,EAAE,CAAC,yEAAe,CAAC;SACnC,CAAC;OACW,SAAS,CAAI;IAAD,gBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClGgC;AACb;AACc;AACE;AACS;AACN;AAC8B;AAClC;AAExD,IAAM,MAAM,GAAW;IACnB,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,OAAO,EAAE,SAAS,EAAE,MAAM,EAAE;IACpD,EAAE,IAAI,EAAE,OAAO,EAAE,SAAS,EAAE,qEAAc,EAAE;IAC5C,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,sGAAyB,EAAE;IAC9D,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,EAAE,kEAAa,EAAE,WAAW,EAAE,CAAC,oEAAa,CAAC,EAAE;IACxE,EAAE,IAAI,EAAE,UAAU,EAAE,SAAS,EAAE,8EAAiB,EAAE;IAClD,EAAE,IAAI,EAAE,QAAQ,EAAE,SAAS,EAAE,wEAAe,EAAE;CACjD,CAAC;AAYF;IAAA;IAA+B,CAAC;IAAnB,gBAAgB;QAV5B,8DAAQ,CAAC;YACN,OAAO,EAAE;gBACL,4DAAY,CAAC,OAAO,CAAC,MAAM,CAAC;aAC/B;YACD,OAAO,EAAE;gBACL,4DAAY;aACf;YACD,YAAY,EAAE,EAAE;SACnB,CAAC;OAEW,gBAAgB,CAAG;IAAD,uBAAC;CAAA;AAAH;;;;;;;;;;;;AC5B7B,6BAA6B,yBAAyB,yBAAyB,oBAAoB,OAAO,6BAA6B,oBAAoB,OAAO,sBAAsB,uBAAuB,yBAAyB,2BAA2B,OAAO,O;;;;;;;;;;;ACA1Q,0gC;;;;;;;;;;;;;;;;;;;;;;;;;;ACAyD;AAEP;AACT;AAOzC;IASE,mCAAoB,WAAwB,EAAU,MAAc;QAAhD,gBAAW,GAAX,WAAW,CAAa;QAAU,WAAM,GAAN,MAAM,CAAQ;QAPpE,aAAQ,GAAgB;YACtB,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,EAAE;YACR,QAAQ,EAAE,EAAE;YACZ,GAAG,EAAE,EAAE;SACR,CAAC;IAIF,CAAC;IAED,4CAAQ,GAAR;IACA,CAAC;IAGD,2CAAO,GAAP;QACE,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC3D,sBAAsB;YACtB,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;QACxB,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YACxB,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,KAAK,GAAG,CAAC,CAAC,CAAC;YAC3B,CAAC;QACH,CAAC,CAAC,CAAC;IACJ,CAAC;IA3BU,yBAAyB;QALrC,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAUiC,kEAAW,EAAkB,sDAAM;OATzD,yBAAyB,CA8BrC;IAAD,gCAAC;CAAA;AA9BqC;;;;;;;;;;;;;ACVtC;AAAA;AAAO,IAAM,UAAU,GAAG;IACtB,OAAO,EAAE,2BAA2B;CACvC,CAAC;;;;;;;;;;;;;ACFF;AAAA;AAAO,IAAM,YAAY,GAAG;IACxB,KAAK,EAAE,OAAO;IACd,OAAO,EAAE,SAAS;CACrB,CAAC;;;;;;;;;;;;ACHF,mB;;;;;;;;;;;ACAA,qb;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAgE;AACN;AACF;AAOxD;IAEI,yBACY,EAAe,EACf,SAAwC,EACvB,IAAI;QAFrB,OAAE,GAAF,EAAE,CAAa;QACf,cAAS,GAAT,SAAS,CAA+B;IAIpD,CAAC;IAED,kCAAQ,GAAR;IAEA,CAAC;IAED,8BAAI,GAAJ;QACI,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;IAC/B,CAAC;IAED,+BAAK,GAAL;QACI,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IAC3B,CAAC;IApBQ,eAAe;QAL3B,+DAAS,CAAC;YACP,QAAQ,EAAE,QAAQ;;;SAGrB,CAAC;QAMO,uEAAM,CAAC,iEAAe,CAAC;yCAFZ,0DAAW;YACJ,8DAAY;OAJ1B,eAAe,CAqB3B;IAAD,sBAAC;CAAA;AArB2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACTe;AACwD;AAE3C;AAGxD;IAEE,uBACU,WAAwB,EACxB,MAAc;QADd,gBAAW,GAAX,WAAW,CAAa;QACxB,WAAM,GAAN,MAAM,CAAQ;IAAG,CAAC;IAE5B,mCAAW,GAAX;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;YAC7C,MAAM,CAAC,IAAI,CAAC;QACd,CAAC;QACD,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IAClC,CAAC;IAXU,aAAa;QADzB,gEAAU,EAAE;yCAIY,mEAAW;YAChB,sDAAM;OAJb,aAAa,CAazB;IAAD,oBAAC;CAAA;AAbyB;;;;;;;;;;;;ACN1B,+BAA+B,sBAAsB,2BAA2B,sCAAsC,kCAAkC,OAAO,K;;;;;;;;;;;ACA/J,kf;;;;;;;;;;;;;;;;;;;;;;;;;ACA0D;AACR;AAOlD;IAGE,yBAAoB,WAAwB;QAAxB,gBAAW,GAAX,WAAW,CAAa;QAD3C,SAAI,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;IACE,CAAC;IAEjD,kCAAQ,GAAR;IACA,CAAC;IAED,yCAAe,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,eAAe,EAAE,CAAC;IAC5C,CAAC;IAED,gCAAM,GAAN;QACE,IAAI,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAC5B,CAAC;IAED,uCAAa,GAAb;QAEE,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACtB,gBAAgB;IACjB,CAAC;IApBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCAIiC,mEAAW;OAHjC,eAAe,CAqB3B;IAAD,sBAAC;CAAA;AArB2B;;;;;;;;;;;;ACR5B,mCAAmC,kCAAkC,OAAO,+BAA+B,sBAAsB,OAAO,mBAAmB,mBAAmB,wCAAwC,kCAAkC,qBAAqB,OAAO,iBAAiB,wCAAwC,0CAA0C,qBAAqB,OAAO,qCAAqC,mBAAmB,kCAAkC,OAAO,sCAAsC,kCAAkC,OAAO,C;;;;;;;;;;;ACAnkB,yoBAAyoB,aAAa,+BAA+B,eAAe,+BAA+B,cAAc,+BAA+B,mBAAmB,ksBAAksB,WAAW,+BAA+B,aAAa,+BAA+B,sBAAsB,qY;;;;;;;;;;;;;;;;;;;;;;;;;;ACAhhD;AAEf;AACT;AAQzC;IAIE,uBAAoB,eAAgC,EAAU,MAAc;QAAxD,oBAAe,GAAf,eAAe,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAQ;QAF5E,cAAS,GAAkB,EAAE,CAAC;IAG7B,CAAC;IAEF,gCAAQ,GAAR;QAAA,iBASG;QANC,IAAI,CAAC,eAAe,CAAC,MAAM,EAAE,CAAC,SAAS,CAAC,kBAAQ;YAC9C,KAAI,CAAC,SAAS,GAAG,QAAQ,CAAC;QAC7B,CAAC,EACE,eAAK;QAEL,CAAC,CAAC,CAAC;IACP,CAAC;IAKH,mCAAW,GAAX;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;IACrC,CAAC;IAvBU,aAAa;QALzB,+DAAS,CAAC;YACT,QAAQ,EAAE,UAAU;;;SAGrB,CAAC;yCAKqC,0EAAe,EAAkB,sDAAM;OAJjE,aAAa,CAwBzB;IAAD,oBAAC;CAAA;AAxByB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXiB;AAEoE;AAClD;AAG7D;IAEI,yBAAoB,cAA8B;QAA9B,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAEtD,mCAAS,GAAT,UAAU,GAAqB,EAAE,IAAiB;QAC9C,IAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC;QAE7C,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;YACR,IAAM,OAAO,GAAG,GAAG,CAAC,KAAK,CAAC;gBACtB,OAAO,EAAE,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,SAAS,GAAG,KAAK,CAAC,YAAY,CAAC;aAC5E,CAAC,CAAC;YAEH,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAErB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAChC,CAAC;QAED,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;IAC5B,CAAC;IAlBQ,eAAe;QAD3B,gEAAU,EAAE;yCAG2B,wEAAc;OAFzC,eAAe,CAmB3B;IAAD,sBAAC;CAAA;AAnB2B;AAqBrB,IAAM,uBAAuB,GAAG;IACnC,OAAO,EAAE,sEAAiB;IAC1B,QAAQ,EAAE,eAAe;IACzB,KAAK,EAAE,IAAI;CACd,CAAC;;;;;;;;;;;;AC/BF,+BAA+B,yBAAyB,yBAAyB,oBAAoB,OAAO,+BAA+B,oBAAoB,OAAO,sBAAsB,uBAAuB,yBAAyB,2BAA2B,OAAO,O;;;;;;;;;;;ACA9Q,k2B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA+D;AACb;AACT;AACe;AASxD;IAOE,wBACU,MAAc,EACd,WAAwB,EACxB,cAA8B;QAF9B,WAAM,GAAN,MAAM,CAAQ;QACd,gBAAW,GAAX,WAAW,CAAa;QACxB,mBAAc,GAAd,cAAc,CAAgB;QARxC,gBAAW,GAAmB;YAC5B,KAAK,EAAE,EAAE;YACT,QAAQ,EAAE,EAAE;SACb,CAAC;IAME,CAAC;IAEL,iCAAQ,GAAR;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,qBAAqB,EAAE,CAAC,CAAC,CAAC;YAC7C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,CAAC;IACH,CAAC;IAED,8BAAK,GAAL;QAAA,iBASC;QARC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,WAAW,CAAC;aAC5C,SAAS,CAAC,kBAAQ;YACjB,KAAI,CAAC,WAAW,CAAC,8BAA8B,CAAC,QAAQ,CAAC,CAAC;YAC1D,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,EACD,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,qCAAqC,CAAC,CAAC;QACrD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,qCAAY,GAAZ;QACE,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,CAAC;IACzC,CAAC;IAGO,yCAAgB,GAAxB;QAAA,iBAcC;QAbC,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE;aAC7B,SAAS,CAAC,iBAAO;YAChB,KAAI,CAAC,WAAW,CAAC,gCAAgC,CAAC,OAAO,CAAC,CAAC;YAC3D,MAAM,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC;gBACrB,KAAK,QAAQ;oBACX,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;oBAC/B,KAAK,CAAC;gBACR;oBACE,OAAO,CAAC,GAAG,CAAC,sCAAsC,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;oBACnE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAChC,KAAK,CAAC;YACV,CAAC;QACH,CAAC,CAAC,CAAC;IACP,CAAC;IAjDU,cAAc;QAL1B,+DAAS,CAAC;YACT,QAAQ,EAAE,WAAW;;;SAGtB,CAAC;yCASkB,sDAAM;YACD,mEAAW;YACR,wEAAc;OAV7B,cAAc,CAmD1B;IAAD,qBAAC;CAAA;AAnD0B;;;;;;;;;;;;;;;;;;;;;;;ACZc;AAWd;AAsB3B;IAAA;IACA,CAAC;IADY,cAAc;QApB1B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,iEAAe;gBACf,+DAAa;gBACb,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,+DAAa;gBACb,+DAAa;aACd;YACD,OAAO,EAAE;gBACP,iEAAe;gBACf,+DAAa;gBACb,kEAAgB;gBAChB,+DAAa;gBACb,+DAAa;gBACb,+DAAa;gBACb,+DAAa;aACd;SACF,CAAC;OACW,cAAc,CAC1B;IAAD,qBAAC;CAAA;AAD0B;;;;;;;;;;;;ACjC3B,iCAAiC,uBAAuB,uBAAuB,kBAAkB,KAAK,C;;;;;;;;;;;ACAtG,iiB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0D;AACjB;AAGoB;AACc;AAQ3E;IAQE,yBAAoB,aAA4B,EAAU,MAAiB,EAAU,MAAc;QAA/E,kBAAa,GAAb,aAAa,CAAe;QAAU,WAAM,GAAN,MAAM,CAAW;QAAU,WAAM,GAAN,MAAM,CAAQ;QANnG,WAAM,GAAc;YAClB,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,EAAE;YACR,aAAa,EAAE,EAAE;SAClB,CAAC;IAEoG,CAAC;IAEvG,kCAAQ,GAAR,cAAY,CAAC;IAEb,mCAAS,GAAT,UAAU,MAAM;QAAhB,iBASC;QARG,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,SAAS,CAAC,kBAAQ;YAC3D,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACjC,CAAC,EAED,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAE1B,CAAC,CAAC,CAAC;IACP,CAAC;IArBU,eAAe;QAL3B,+DAAS,CAAC;YACT,QAAQ,EAAE,YAAY;;;SAGvB,CAAC;yCASmC,sEAAa,EAAkB,2DAAS,EAAkB,sDAAM;OARxF,eAAe,CAwB3B;IAAD,sBAAC;CAAA;AAxB2B;;;;;;;;;;;;ACb5B,iCAAiC,uBAAuB,uBAAuB,kBAAkB,KAAK,C;;;;;;;;;;;ACAtG,yrB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0D;AAIjB;AAGwB;AACU;AAQ3E;IASE,2BAAoB,eAAgC,EAAU,MAAiB,EAAU,MAAc;QAAnF,oBAAe,GAAf,eAAe,CAAiB;QAAU,WAAM,GAAN,MAAM,CAAW;QAAU,WAAM,GAAN,MAAM,CAAQ;QAPvG,aAAQ,GAAgB;YACtB,EAAE,EAAE,IAAI;YACR,IAAI,EAAE,EAAE;YACR,GAAG,EAAE,EAAE;YACP,QAAQ,EAAE,EAAE;SACb,CAAC;IAEwG,CAAC;IAE3G,oCAAQ,GAAR,cAAY,CAAC;IAEb,uCAAW,GAAX,UAAY,QAAQ;QAApB,iBASC;QARG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,kBAAQ;YACjE,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;QACjC,CAAC,EAED,eAAK;YACH,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAE1B,CAAC,CAAC,CAAC;IACP,CAAC;IAtBU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;yCAUqC,0EAAe,EAAkB,2DAAS,EAAkB,sDAAM;OAT5F,iBAAiB,CAyB7B;IAAD,wBAAC;CAAA;AAzB6B;;;;;;;;;;;;;;;;;;;;;;;;;;;AChBsB;AAEF;AACP;AAI3C;IAEI,qBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAEjC,gCAAU,GAAjB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACb,6DAAU,CAAC,OAAO,iBAAc,CACtC,CAAC;IACN,CAAC;IAEM,8BAAQ,GAAf,UAAgB,GAAgB;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CACd,6DAAU,CAAC,OAAO,YAAS,EAAE,GAAG,EAAE;YACjC,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;SACvB,CACJ,CAAC;IACN,CAAC;IAjBQ,WAAW;QADvB,gEAAU,EAAE;yCAGiB,+DAAU;OAF3B,WAAW,CAkBvB;IAAD,kBAAC;CAAA;AAlBuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACN4B;AAEF;AACP;AAI3C;IAEI,uBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAGjC,8BAAM,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAiB,6DAAU,CAAC,OAAO,4BAAyB,CAAC,CAAC;IACtF,CAAC;IAGM,kCAAU,GAAjB,UAAkB,GAAc;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CACd,6DAAU,CAAC,OAAO,YAAS,EAAE,GAAG,EAAE;YACjC,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;SACvB,CACJ,CAAC;IACN,CAAC;IAjBQ,aAAa;QADzB,gEAAU,EAAE;yCAGiB,+DAAU;OAF3B,aAAa,CAkBzB;IAAD,oBAAC;CAAA;AAlByB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACRe;AACE;AACoB;AACZ;AAID;AAIlD;IAEI,qBACY,IAAgB,EAChB,MAAc,EACd,cAA8B;QAF9B,SAAI,GAAJ,IAAI,CAAY;QAChB,WAAM,GAAN,MAAM,CAAQ;QACd,mBAAc,GAAd,cAAc,CAAgB;IAAG,CAAC;IAE9C,kCAAY,GAAZ,UAAa,WAA2B;QACpC,IAAM,GAAG,GAAG,IAAI,eAAe,EAAE,CAAC;QAClC,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;QACvC,GAAG,CAAC,GAAG,CAAC,UAAU,EAAE,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC1C,GAAG,CAAC,GAAG,CAAC,WAAW,EAAE,gBAAgB,CAAC,CAAC;QACvC,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;QAElC,IAAM,OAAO,GAAG,IAAI,gEAAW,CAAC;YAC5B,eAAe,EAAE,gDAAgD;YACjE,cAAc,EAAE,mCAAmC;SACtD,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QAEnC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CACd,6DAAU,CAAC,OAAO,iBAAc,EACnC,GAAG,CAAC,QAAQ,EAAE,EACd,EAAE,OAAO,WAAE,CACd,CAAC;IACN,CAAC;IAED,4BAAM,GAAN;QACI,IAAI,CAAC,cAAc,CAAC,MAAM,EAAE,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;IACpC,CAAC;IAED,oDAA8B,GAA9B,UAA+B,KAAe;QAC1C,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IACxC,CAAC;IAED,sDAAgC,GAAhC,UAAiC,OAAmB;QAChD,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;IAC5C,CAAC;IAED,qCAAe,GAAf;QACI,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC;IACzD,CAAC;IAED,4CAAsB,GAAtB;QACI,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,IAAI,KAAK,SAAS,CAAC;IACzF,CAAC;IAED,2CAAqB,GAArB;QACI,MAAM,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,IAAI,CAAC,cAAc,CAAC,UAAU,EAAE,CAAC,IAAI,KAAK,QAAQ,CAAC;IACxF,CAAC;IAnDQ,WAAW;QADvB,gEAAU,EAAE;yCAIS,+DAAU;YACR,sDAAM;YACE,+DAAc;OALjC,WAAW,CAoDvB;IAAD,kBAAC;CAAA;AApDuB;;;;;;;;;;;;;;;;;;;;;;;;;;;ACV4B;AAEF;AACP;AAI3C;IAEI,yBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAGjC,gCAAM,GAAb;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,6DAAU,CAAC,OAAO,gCAA6B,CAAC,CAAC;IAC5F,CAAC;IAGM,sCAAY,GAAnB,UAAoB,GAAgB;QAChC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CACd,6DAAU,CAAC,OAAO,cAAW,EAAE,GAAG,EAAE;YACnC,OAAO,EAAE,UAAU;YACnB,YAAY,EAAE,MAAM;SACvB,CACJ,CAAC;IACN,CAAC;IAjBQ,eAAe;QAD3B,gEAAU,EAAE;yCAGiB,+DAAU;OAF3B,eAAe,CAkB3B;IAAD,sBAAC;CAAA;AAlB2B;;;;;;;;;;;;;;;;;;;;;;;;;;ACRe;AAEkB;AAI7D;IAEI;IAAe,CAAC;IAEhB,iCAAQ,GAAR;QACI,IAAM,KAAK,GAAG,YAAY,CAAC,OAAO,CAAC,wEAAY,CAAC,KAAK,CAAC,CAAC;QACvD,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACpD,CAAC;IAED,iCAAQ,GAAR,UAAS,KAAe;QACpB,EAAE,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC,CAAC,CAAC;YAChB,YAAY,CAAC,UAAU,CAAC,wEAAY,CAAC,KAAK,CAAC,CAAC;QAChD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,YAAY,CAAC,OAAO,CAAC,wEAAY,CAAC,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC;QACpE,CAAC;IACL,CAAC;IAED,mCAAU,GAAV;QACI,IAAM,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC,wEAAY,CAAC,OAAO,CAAC,CAAC;QAC3D,MAAM,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;IACxD,CAAC;IAED,mCAAU,GAAV,UAAW,OAAmB;QAC1B,EAAE,CAAC,CAAC,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC;YAClB,YAAY,CAAC,UAAU,CAAC,wEAAY,CAAC,OAAO,CAAC,CAAC;QAClD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,YAAY,CAAC,OAAO,CAAC,wEAAY,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QACxE,CAAC;IACL,CAAC;IAED,+BAAM,GAAN;QACI,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC;QACpB,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;IAC1B,CAAC;IAjCQ,cAAc;QAD1B,gEAAU,EAAE;;OACA,cAAc,CAkC1B;IAAD,qBAAC;CAAA;AAlC0B;;;;;;;;;;;;;;;;;;;;;;;;;;;ACNyB;AACF;AAEP;AAK3C;IAEI,wBAAoB,IAAgB;QAAhB,SAAI,GAAJ,IAAI,CAAY;IAAG,CAAC;IAEjC,mCAAU,GAAjB;QACI,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACb,6DAAU,CAAC,OAAO,mBAAgB,CACxC,CAAC;IACN,CAAC;IAEM,+BAAM,GAAb,UAAc,KAAa;QACvB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CACb,6DAAU,CAAC,OAAO,+BAA0B,KAAO,CACzD,CAAC;IACN,CAAC;IAdQ,cAAc;QAD1B,gEAAU,EAAE;yCAGiB,+DAAU;OAF3B,cAAc,CAe1B;IAAD,qBAAC;CAAA;AAf0B;;;;;;;;;;;;;ACR3B;AAAA;AAAA,mFAAmF;AACnF,8FAA8F;AAC9F,yEAAyE;AACzE,gFAAgF;AAEzE,IAAM,WAAW,GAAG;IACzB,UAAU,EAAE,KAAK;CAClB,CAAC;;;;;;;;;;;;;ACPF;AAAA;AAAA;AAAA;AAAA;AAA+C;AAC4B;AAE9B;AACY;AAEzD,EAAE,CAAC,CAAC,qEAAW,CAAC,UAAU,CAAC,CAAC,CAAC;IAC3B,oEAAc,EAAE,CAAC;AACnB,CAAC;AAED,gGAAsB,EAAE,CAAC,eAAe,CAAC,yDAAS,CAAC;KAChD,KAAK,CAAC,aAAG,IAAI,cAAO,CAAC,GAAG,CAAC,GAAG,CAAC,EAAhB,CAAgB,CAAC,CAAC","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<app-header></app-header>\\r\\n<router-outlet></router-outlet>\"","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'app';\r\n}\r\n","import { PacienteService } from './services/paciente.service';\r\nimport { MedicoService } from './services/medico.service';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { HomeService } from './services/home.service';\r\nimport { UsuarioService } from './services/usuario.service';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { AppRoutinhModule } from './app.routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { HomeComponent } from './home/home.component';\r\nimport { AuthService } from './services/oauth.service';\r\nimport { StorageService } from './services/storage.service';\r\nimport { AuthInterceptorProvider } from './interceptors/auth.interceptor';\r\nimport { HttpModule } from '@angular/http';\r\nimport { MaterialModule } from './material.module';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { PacienteComponent } from './paciente/paciente.component';\r\nimport { MatInputModule, MAT_DIALOG_SCROLL_STRATEGY, MatDialogModule, MatAutocompleteModule, MatButtonModule,\r\n  MatButtonToggleModule, MatCheckboxModule, MatCardModule, MatChipsModule, MatDatepickerModule, MatDividerModule,\r\n  MatExpansionModule, MatGridListModule, MatIconModule, MatListModule, MatMenuModule, MatNativeDateModule, MatPaginatorModule,\r\n  MatProgressBarModule, MatProgressSpinnerModule, MatRadioModule, MatTooltipModule, MatToolbarModule, MatTabsModule, MatStepperModule,\r\n  MatTableModule, MatSortModule, MatSnackBarModule, MatSlideToggleModule, MatSliderModule, MatSidenavModule, MatSelectModule,\r\n  MatRippleModule } from '@angular/material';\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { CadastroPacienteComponent } from './cadastropaciente/cadastropaciente.component';\r\nimport { CadastroMedicoComponent } from './cadastromedico/cadastromedico.component';\r\nimport { HomeAuthGuard } from './guard/home.auth.guard';\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    HomeComponent,\r\n    PacienteComponent,\r\n    DialogComponent,\r\n    CadastroPacienteComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutinhModule,\r\n    FormsModule,\r\n    HttpClientModule,\r\n    MaterialModule,\r\n    MatInputModule,\r\n    BrowserAnimationsModule,\r\n    MatDialogModule,\r\n    ReactiveFormsModule,\r\n\r\n    MatAutocompleteModule,\r\n\r\n    MatButtonModule,\r\n    MatButtonToggleModule,\r\n    MatCardModule,\r\n    MatCheckboxModule,\r\n    MatChipsModule,\r\n    MatDatepickerModule,\r\n    MatDividerModule,\r\n    MatExpansionModule,\r\n    MatGridListModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatMenuModule,\r\n    MatNativeDateModule,\r\n    MatPaginatorModule,\r\n    MatProgressBarModule,\r\n    MatProgressSpinnerModule,\r\n    MatRadioModule,\r\n    MatRippleModule,\r\n    MatSelectModule,\r\n    MatSidenavModule,\r\n    MatSliderModule,\r\n    MatSlideToggleModule,\r\n    MatSnackBarModule,\r\n    MatSortModule,\r\n    MatStepperModule,\r\n    MatTableModule,\r\n    MatTabsModule,\r\n    MatToolbarModule,\r\n    MatTooltipModule\r\n  ],\r\n  providers: [\r\n    HomeService,\r\n    PacienteService,\r\n    MedicoService,\r\n    AuthService,\r\n    StorageService,\r\n    UsuarioService,\r\n    AuthInterceptorProvider,\r\n    HomeAuthGuard\r\n  ],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [DialogComponent]\r\n})\r\nexport class AppModule { }\r\n","import { HomeComponent } from './home/home.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { LoginComponent } from './login/login.component';\r\nimport { PacienteComponent } from './paciente/paciente.component';\r\nimport { MedicoComponent } from './medico/medico.component';\r\nimport { CadastroPacienteComponent } from './cadastropaciente/cadastropaciente.component';\r\nimport { HomeAuthGuard } from './guard/home.auth.guard';\r\n\r\nconst routes: Routes = [\r\n    { path: '', redirectTo: 'login', pathMatch: 'full' },\r\n    { path: 'login', component: LoginComponent },\r\n    { path: 'cadastroHome', component: CadastroPacienteComponent },\r\n    { path: 'home', component: HomeComponent, canActivate: [HomeAuthGuard] },\r\n    { path: 'paciente', component: PacienteComponent },\r\n    { path: 'medico', component: MedicoComponent }\r\n];\r\n\r\n@NgModule({\r\n    imports: [\r\n        RouterModule.forRoot(routes)\r\n    ],\r\n    exports: [\r\n        RouterModule\r\n    ],\r\n    declarations: []\r\n})\r\n\r\nexport class AppRoutinhModule {}\r\n","module.exports = \".cad-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .cad-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  mat-card {\\r\\n    max-width: 80%;\\r\\n    margin: 2em auto;\\r\\n    text-align: center;\\r\\n  }\\r\\n  \"","module.exports = \"<mat-toolbar color=\\\"primary\\\">\\r\\n     \\r\\n  <span>Cadastro Paciente</span>\\r\\n</mat-toolbar>\\r\\n<mat-card>\\r\\n  <form class=\\\"cad-form\\\">\\r\\n    <mat-form-field class=\\\"cad-full-width\\\">\\r\\n      <input matInput required autofocus id=\\\"nome\\\" name=\\\"nome\\\" placeholder=\\\"Nome\\\" [(ngModel)]=\\\"paciente.nome\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"cad-full-width\\\">\\r\\n      <input matInput class=\\\"form-control\\\" id=\\\"cpf\\\" name=\\\"cpf\\\" [(ngModel)]=\\\"home.cpf\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"cad-full-width\\\">\\r\\n      <input matInput class=\\\"form-control\\\" id=\\\"email\\\" name=\\\"email\\\" [(ngModel)]=\\\"home.email\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"cad-full-width\\\">\\r\\n       <input matInput type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"pwd\\\" name=\\\"password\\\" [(ngModel)]=\\\"home.password\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n\\r\\n <button mat-raised-button color=\\\"primary\\\" (click)=\\\"cadHome()\\\">Cadastrar</button>\\r\\n <br/>\\r\\n <br/>\"","import { HomeService } from './../services/home.service';\r\nimport { PacienteDTO } from './../models/paciente.dto';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-Home',\r\n  templateUrl: './cadastropaciente.component.html',\r\n  styleUrls: ['./cadastropaciente.component.css']\r\n})\r\nexport class CadastroPacienteComponent implements OnInit {\r\n\r\n  paciente: PacienteDTO = {\r\n    id: null,\r\n    nome: '',\r\n    telefone: '',\r\n    cpf: ''\r\n  };\r\n\r\n  constructor(private HomeService: HomeService, private router: Router) {\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n\r\n  cadHome() {\r\n    this.HomeService.postHome(this.paciente).subscribe(response => {\r\n    //  this.openDialog();\r\n    console.log('deu bom');\r\n   },\r\n   error => {\r\n     console.log('deu ruim');\r\n     if (error.status === 403) {\r\n     }\r\n   });\r\n  }\r\n\r\n\r\n}\r\n","export const API_CONFIG = {\r\n    baseUrl: 'http://localhost:8080/api'\r\n};\r\n","export const STORAGE_KEYS = {\r\n    oauth: 'oauth',\r\n    usuario: 'usuario'\r\n};\r\n","module.exports = \"\"","module.exports = \"<h2 mat-dialog-title>ALERTA</h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n  \\r\\n    <mat-form-field>\\r\\n               <span>TESTE</span>\\r\\n    </mat-form-field>\\r\\n     \\r\\n \\r\\n</mat-dialog-content>\\r\\n\\r\\n<mat-dialog-actions>\\r\\n    <button class=\\\"mat-raised-button\\\"(click)=\\\"close()\\\">Close</button>\\r\\n    <button class=\\\"mat-raised-button mat-primary\\\"(click)=\\\"save()\\\">Save</button>\\r\\n</mat-dialog-actions>\\r\\n  \\r\\n\"","import {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material\";\r\nimport { Component, OnInit, Inject } from \"@angular/core\";\r\nimport { FormGroup, FormBuilder } from \"@angular/forms\";\r\n\r\n@Component({\r\n    selector: 'dialog',\r\n    templateUrl: './dialog.component.html',\r\n    styleUrls: ['./dialog.component.css']\r\n})\r\nexport class DialogComponent implements OnInit {\r\n\r\n    constructor(\r\n        private fb: FormBuilder,\r\n        private dialogRef: MatDialogRef<DialogComponent>,\r\n        @Inject(MAT_DIALOG_DATA) data) {\r\n\r\n      \r\n    }\r\n\r\n    ngOnInit() {\r\n  \r\n    }\r\n\r\n    save() {\r\n        this.dialogRef.close(this);\r\n    }\r\n\r\n    close() {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { AuthService } from '../services/oauth.service';\r\n\r\n@Injectable()\r\nexport class HomeAuthGuard implements CanActivate {\r\n\r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router) {}\r\n\r\n  canActivate() {\r\n    if (this.authService.isAgenteAuthenticated()) {\r\n      return true;\r\n    }\r\n    this.router.navigate(['login']);\r\n  }\r\n\r\n}\r\n","module.exports = \".button-sec {\\r\\n    display: flex;\\r\\n    align-items: right;\\r\\n    justify-content: space-around;\\r\\n    background-color: #555555;\\r\\n  }\\r\\n\"","module.exports = \"<mat-toolbar class=\\\"mat-elevation-z4\\\" color=\\\"primary\\\" role=\\\"header\\\">\\r\\n  <div class=\\\"core-header-logo\\\" *ngIf=\\\"!isAuthenticated()\\\">\\r\\n    <span>\\r\\n      Bem-vindo ao projeto ProInter\\r\\n    </span>\\r\\n  </div>\\r\\n\\r\\n  <div class=\\\"core-header-logo\\\" *ngIf=\\\"isAuthenticated()\\\">\\r\\n\\r\\n    <span>\\r\\n      ProInter Dashboard\\r\\n    </span>\\r\\n\\r\\n    <button mat-raised-button class=\\\"button-sec\\\" (click)=\\\"logout()\\\">Sair</button>\\r\\n  </div>\\r\\n</mat-toolbar>\\r\\n\"","import { AuthService } from './../services/oauth.service';\r\nimport { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit {\r\n\r\n   menu = document.getElementById('Menudrawer');\r\n  constructor(private authService: AuthService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  isAuthenticated() {\r\n    return this.authService.isAuthenticated();\r\n  }\r\n\r\n  logout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  openCloseMenu() {\r\n\r\n    console.log('teste');\r\n   // this.menu.set\r\n  }\r\n}\r\n","module.exports = \".demo-tab-group {\\r\\n    border: 1px solid #e8e8e8;\\r\\n  }\\r\\n  \\r\\n  .demo-tab-content {\\r\\n    padding: 16px;\\r\\n  }\\r\\n  \\r\\n  table {\\r\\n    width: 80%;\\r\\n  \\r\\n    background-color: #3F51B5;\\r\\n    border-collapse: collapse;\\r\\n    padding: 5px;\\r\\n  }\\r\\n  \\r\\n  td  {\\r\\n  \\r\\n    border: 1px solid #3F51B5;\\r\\n    \\r\\n    border-collapse: collapse;\\r\\n    padding: 5px;\\r\\n  }\\r\\n  \\r\\n  table tr:nth-child(odd) {\\r\\n    width: 25%;\\r\\n    background-color: #f1f1f1;\\r\\n  }\\r\\n  \\r\\n  table tr:nth-child(even) {\\r\\n    background-color: #ffffff;\\r\\n  }\"","module.exports = \"<div class=\\\"col-md-6\\\">\\r\\n  <h2>Consultas</h2>\\r\\n</div>\\r\\n<mat-card>\\r\\n  <mat-card-content>\\r\\n    <mat-tab-group class=\\\"demo-tab-group\\\">\\r\\n      <mat-tab label=\\\"Cadastro Pacientes\\\">\\r\\n        <div class=\\\"demo-tab-content\\\">\\r\\n          <table class=\\\"table table-striped\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                <th>Id</th>\\r\\n                <th>Nome</th>\\r\\n                <th>CPF</th>\\r\\n                <th>Telefone</th>\\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody >\\r\\n                <tr *ngFor=\\\"let paciente of pacientes\\\">\\r\\n                <td>{{paciente.id}}</td>\\r\\n                <td>{{paciente.nome}}</td>\\r\\n                <td>{{paciente.cpf}}</td>\\r\\n                <td>{{paciente.telefone}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <br />\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"cadPaciente()\\\">Novo Paciente</button>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n      <mat-tab label=\\\"Cadastro Médicos\\\">\\r\\n        <div class=\\\"demo-tab-content\\\">\\r\\n          <table class=\\\"table table-striped\\\">\\r\\n            <thead>\\r\\n                <tr>\\r\\n                <th>Id</th>\\r\\n                <th>Nome</th>\\r\\n                <th>Especialidade</th>           \\r\\n                </tr>\\r\\n              </thead>\\r\\n              <tbody >\\r\\n                <tr *ngFor=\\\"let medico of medicoss\\\">\\r\\n                <td>{{medico.id}}</td>\\r\\n                <td>{{medico.nome}}</td>\\r\\n                <td>{{medico.especialidade}}</td>\\r\\n                </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <br />\\r\\n          <button mat-raised-button color=\\\"primary\\\" (click)=\\\"cadPaciente()\\\">Novo Médico</button>\\r\\n        </div>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab label=\\\"Cadastro Consultas\\\">\\r\\n  \\r\\n      </mat-tab>\\r\\n    </mat-tab-group>\\r\\n  </mat-card-content>\\r\\n</mat-card>\\r\\n\\r\\n\"","import { PacienteService } from './../services/paciente.service';\r\nimport { PacienteDTO } from './../models/paciente.dto';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { QuartoService } from '../services/quarto.service';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n\r\n  pacientes: PacienteDTO[] = [];\r\n\r\n  constructor(private pacienteService: PacienteService, private router: Router) {\r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n\r\n      this.pacienteService.getAll().subscribe(response => {\r\n        this.pacientes = response;\r\n     },\r\n        error => {\r\n\r\n        });\r\n    }\r\n\r\n    \r\n\r\n\r\n  cadPaciente() {\r\n    this.router.navigate(['paciente']);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { StorageService } from '../services/storage.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private storageService: StorageService) {}\r\n\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const oauth = this.storageService.getToken();\r\n\r\n        if (oauth) {\r\n            const authReq = req.clone({\r\n                headers: req.headers.set('Authorization', 'Bearer ' + oauth.access_token)\r\n            });\r\n\r\n            console.log(authReq);\r\n\r\n            return next.handle(authReq);\r\n        }\r\n\r\n        return next.handle(req);\r\n    }\r\n}\r\n\r\nexport const AuthInterceptorProvider = {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true\r\n};\r\n","module.exports = \".login-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  .login-full-width {\\r\\n    width: 100%;\\r\\n  }\\r\\n  \\r\\n  mat-card {\\r\\n    max-width: 80%;\\r\\n    margin: 2em auto;\\r\\n    text-align: center;\\r\\n  }\\r\\n  \"","module.exports = \"<!--mat-toolbar color=\\\"primary\\\">\\r\\n  <span>Login</span>\\r\\n</mat-toolbar-->\\r\\n<mat-card>\\r\\n  <form class=\\\"login-form\\\">\\r\\n    <mat-form-field class=\\\"login-full-width\\\">\\r\\n      <input matInput type=\\\"email\\\" autofocus id=\\\"email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" [(ngModel)]=\\\"credenciais.email\\\" />\\r\\n    </mat-form-field>\\r\\n\\r\\n    <mat-form-field class=\\\"login-full-width\\\">\\r\\n      <input matInput type=\\\"password\\\" autofocus id=\\\"pwd\\\" name=\\\"passowrd\\\" placeholder=\\\"Senha\\\" [(ngModel)]=\\\"credenciais.password\\\">\\r\\n    </mat-form-field>\\r\\n\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"login()\\\">Login</button>\\r\\n    <br/>\\r\\n    <br/>\\r\\n\\r\\n    <button mat-raised-button color=\\\"primary\\\" (click)=\\\"cadastroHome()\\\">CADASTRAR USUARIO</button>\\r\\n    <br/>\\r\\n    <br/>\\r\\n    \\r\\n  </form>\\r\\n</mat-card>\"","import { UsuarioService } from './../services/usuario.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AuthService } from '../services/oauth.service';\r\nimport { CredenciaisDTO } from '../models/credenciais.dto';\r\nimport { OAuthDTO } from '../models/oauth.dto';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n})\r\nexport class LoginComponent implements OnInit {\r\n\r\n  credenciais: CredenciaisDTO = {\r\n    email: '',\r\n    password: ''\r\n  };\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService,\r\n    private usuarioService: UsuarioService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    if (this.authService.isAgenteAuthenticated()) {\r\n      this.router.navigate(['agente']);\r\n    }\r\n  }\r\n\r\n  login() {\r\n    this.authService.authenticate(this.credenciais)\r\n      .subscribe(response => {\r\n        this.authService.successfullAuthenticationToken(response);\r\n        this.goCurrentUsuario();\r\n      },\r\n      error => {\r\n        console.log('Erro ao realizar o login do agente.');\r\n      });\r\n  }\r\n\r\n  cadastroHome() {\r\n    this.router.navigate(['cadastroHome']);\r\n  }\r\n\r\n\r\n  private goCurrentUsuario() {\r\n    this.usuarioService.getCurrent()\r\n      .subscribe(usuario => {\r\n        this.authService.successfullAuthenticationUsuario(usuario);\r\n        switch (usuario.tipo) {\r\n          case 'AGENTE':\r\n            this.router.navigate(['home']);\r\n            break;\r\n          default:\r\n            console.log('tipo de usuario invalido encontrado ' + usuario.tipo);\r\n            this.router.navigate(['login']);\r\n            break;\r\n        }\r\n      });\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\n\r\nimport {\r\n  MatButtonModule,\r\n  MatMenuModule,\r\n  MatToolbarModule,\r\n  MatIconModule,\r\n  MatCardModule,\r\n  MatDialogRef,\r\n  MatTabsModule,\r\n  MatListModule\r\n} from '@angular/material';\r\n\r\n@NgModule({\r\n  imports: [\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatTabsModule,\r\n    MatListModule\r\n  ],\r\n  exports: [\r\n    MatButtonModule,\r\n    MatMenuModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatCardModule,\r\n    MatTabsModule,\r\n    MatListModule\r\n  ]\r\n})\r\nexport class MaterialModule {\r\n}\r\n","module.exports = \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\"","module.exports = \"<form class=\\\"example-form\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Nome\\\"  id=\\\"nome\\\" name=\\\"nome\\\" [(ngModel)]=\\\"medico.nome\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"example-form\\\">\\r\\n    <input matInput placeholder=\\\"Especialidade\\\"  id=\\\"especialidade\\\" name=\\\"especialidade\\\" [(ngModel)]=\\\"medico.especialidade\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"cadMedico()\\\">Cadastrar</button>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { MedicoDTO } from './../models/medico.dto';\r\nimport { HomeService } from './../services/home.service';\r\nimport { MedicoService } from './../services/medico.service';\r\nimport {MatDialog, MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport { DialogComponent } from '../dialog/dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-medico',\r\n  templateUrl: './medico.component.html',\r\n  styleUrls: ['./medico.component.css']\r\n})\r\nexport class MedicoComponent implements OnInit {\r\n\r\n  medico: MedicoDTO = {\r\n    id: null,\r\n    nome: \"\",\r\n    especialidade: \"\"\r\n  };\r\n\r\n  constructor(private medicoService: MedicoService,  public dialog: MatDialog, private router: Router) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  cadMedico(medico) {\r\n      this.medicoService.postMedico(this.medico).subscribe(response => {\r\n        this.router.navigate(['home']);\r\n      },\r\n      \r\n      error => {\r\n        console.log('deu ruim');\r\n\r\n      });\r\n  }\r\n\r\n\r\n}\r\n\r\n","module.exports = \".example-form {\\r\\n  min-width: 150px;\\r\\n  max-width: 500px;\\r\\n  width: 100%;\\r\\n}\"","module.exports = \"<form class=\\\"example-form\\\">\\r\\n  <mat-form-field class=\\\"example-full-width\\\">\\r\\n    <input matInput placeholder=\\\"Nome\\\"  id=\\\"nome\\\" name=\\\"nome\\\" [(ngModel)]=\\\"paciente.nome\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"example-form\\\">\\r\\n    <input matInput placeholder=\\\"CPF\\\"  id=\\\"cpf\\\" name=\\\"cpf\\\" [(ngModel)]=\\\"paciente.cpf\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <mat-form-field class=\\\"example-form\\\">\\r\\n    <input matInput placeholder=\\\"Telefone\\\"  id=\\\"telefone\\\" name=\\\"telefone\\\" [(ngModel)]=\\\"paciente.telefone\\\">\\r\\n  </mat-form-field>\\r\\n\\r\\n  <button mat-raised-button color=\\\"primary\\\" (click)=\\\"cadPaciente()\\\">Cadastrar</button>\\r\\n</form>\\r\\n\"","import { Component, OnInit, Inject } from '@angular/core';\r\n\r\n\r\nimport { HomeDTO } from './../models/home.dto';\r\nimport { Router } from '@angular/router';\r\nimport { PacienteDTO } from './../models/paciente.dto';\r\nimport { HomeService } from './../services/home.service';\r\nimport { PacienteService } from './../services/paciente.service';\r\nimport {MatDialog, MAT_DIALOG_DATA, MatDialogRef} from '@angular/material';\r\nimport { DialogComponent } from '../dialog/dialog.component';\r\n\r\n@Component({\r\n  selector: 'app-paciente',\r\n  templateUrl: './paciente.component.html',\r\n  styleUrls: ['./paciente.component.css']\r\n})\r\nexport class PacienteComponent implements OnInit {\r\n\r\n  paciente: PacienteDTO = {\r\n    id: null,\r\n    nome: \"\",\r\n    cpf: \"\",\r\n    telefone: \"\"\r\n  };\r\n\r\n  constructor(private pacienteService: PacienteService,  public dialog: MatDialog, private router: Router) {}\r\n\r\n  ngOnInit() {}\r\n\r\n  cadPaciente(paciente) {\r\n      this.pacienteService.postPaciente(this.paciente).subscribe(response => {\r\n        this.router.navigate(['Home']);\r\n      },\r\n      \r\n      error => {\r\n        console.log('deu ruim');\r\n\r\n      });\r\n  }\r\n\r\n\r\n}\r\n\r\n","import { API_CONFIG } from './../config/api.config';\r\nimport { PacienteDTO } from './../models/paciente.dto';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class HomeService {\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    public getCurrent(): Observable<PacienteDTO> {\r\n        return this.http.get<PacienteDTO>(\r\n            `${API_CONFIG.baseUrl}/agente/self`\r\n        );\r\n    }\r\n\r\n    public postHome(obj: PacienteDTO) {\r\n        return this.http.post(\r\n            `${API_CONFIG.baseUrl}/agente`, obj, {\r\n                observe: 'response',\r\n                responseType: 'text'\r\n            }\r\n        );\r\n    }\r\n}\r\n","import { MedicoDTO } from './../models/medico.dto';\r\nimport { API_CONFIG } from './../config/api.config';\r\nimport { HomeDTO } from './../models/home.dto';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class MedicoService {\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n\r\n    public getAll():  Observable<MedicoDTO[]>  {\r\n        return this.http.get<MedicoDTO[]>(`${API_CONFIG.baseUrl}/medico/medicoSearchAll`);\r\n    }\r\n\r\n\r\n    public postMedico(obj: MedicoDTO) {\r\n        return this.http.post(\r\n            `${API_CONFIG.baseUrl}/medico`, obj, {\r\n                observe: 'response',\r\n                responseType: 'text'\r\n            }\r\n        );\r\n    }\r\n}\r\n","import { Router } from '@angular/router';\r\nimport { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { StorageService } from './storage.service';\r\nimport { CredenciaisDTO } from '../models/credenciais.dto';\r\nimport { OAuthDTO } from '../models/oauth.dto';\r\nimport { Observable } from 'rxjs/Observable';\r\nimport { API_CONFIG } from '../config/api.config';\r\nimport { UsuarioDTO } from '../models/usuario.dto';\r\n\r\n@Injectable()\r\nexport class AuthService {\r\n\r\n    constructor(\r\n        private http: HttpClient,\r\n        private router: Router,\r\n        private storageService: StorageService) {}\r\n\r\n    authenticate(credenciais: CredenciaisDTO): Observable<OAuthDTO> {\r\n        const req = new URLSearchParams();\r\n        req.set('username', credenciais.email);\r\n        req.set('password', credenciais.password);\r\n        req.set('client_id', 'lmedievais-app');\r\n        req.set('grant_type', 'password');\r\n\r\n        const headers = new HttpHeaders({\r\n            'Authorization': 'Basic bG1lZGlldmFpcy1hcHA6eXRob3RlaXMtc2VjcmV0',\r\n            'Content-Type': 'application/x-www-form-urlencoded'\r\n        });\r\n\r\n        this.storageService.setToken(null);\r\n\r\n        return this.http.post<OAuthDTO>(\r\n            `${API_CONFIG.baseUrl}/oauth/token`,\r\n            req.toString(),\r\n            { headers }\r\n        );\r\n    }\r\n\r\n    logout() {\r\n        this.storageService.logout();\r\n        this.router.navigate(['login']);\r\n    }\r\n\r\n    successfullAuthenticationToken(oauth: OAuthDTO) {\r\n        this.storageService.setToken(oauth);\r\n    }\r\n\r\n    successfullAuthenticationUsuario(usuario: UsuarioDTO) {\r\n        this.storageService.setUsuario(usuario);\r\n    }\r\n\r\n    isAuthenticated() {\r\n        return this.storageService.getToken() ? true : false;\r\n    }\r\n\r\n    isAgenciaAuthenticated() {\r\n        return this.isAuthenticated() && this.storageService.getUsuario().tipo === 'AGENCIA';\r\n    }\r\n\r\n    isAgenteAuthenticated() {\r\n        return this.isAuthenticated() && this.storageService.getUsuario().tipo === 'AGENTE';\r\n    }\r\n}\r\n","import { PacienteDTO } from './../models/paciente.dto';\r\nimport { API_CONFIG } from './../config/api.config';\r\nimport { HomeDTO } from './../models/home.dto';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n@Injectable()\r\nexport class PacienteService {\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n\r\n    public getAll():  Observable<PacienteDTO[]>  {\r\n        return this.http.get<PacienteDTO[]>(`${API_CONFIG.baseUrl}/paciente/pacienteSearchAll`);\r\n    }\r\n\r\n\r\n    public postPaciente(obj: PacienteDTO) {\r\n        return this.http.post(\r\n            `${API_CONFIG.baseUrl}/paciente`, obj, {\r\n                observe: 'response',\r\n                responseType: 'text'\r\n            }\r\n        );\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { OAuthDTO } from '../models/oauth.dto';\r\nimport { STORAGE_KEYS } from '../config/storage_keys.config';\r\nimport { UsuarioDTO } from '../models/usuario.dto';\r\n\r\n@Injectable()\r\nexport class StorageService {\r\n\r\n    constructor() {}\r\n\r\n    getToken(): OAuthDTO {\r\n        const oauth = localStorage.getItem(STORAGE_KEYS.oauth);\r\n        return oauth != null ? JSON.parse(oauth) : null;\r\n    }\r\n\r\n    setToken(oauth: OAuthDTO) {\r\n        if (oauth == null) {\r\n            localStorage.removeItem(STORAGE_KEYS.oauth);\r\n        } else {\r\n            localStorage.setItem(STORAGE_KEYS.oauth, JSON.stringify(oauth));\r\n        }\r\n    }\r\n\r\n    getUsuario(): UsuarioDTO {\r\n        const usuario = localStorage.getItem(STORAGE_KEYS.usuario);\r\n        return usuario != null ? JSON.parse(usuario) : null;\r\n    }\r\n\r\n    setUsuario(usuario: UsuarioDTO) {\r\n        if (usuario == null) {\r\n            localStorage.removeItem(STORAGE_KEYS.usuario);\r\n        } else {\r\n            localStorage.setItem(STORAGE_KEYS.usuario, JSON.stringify(usuario));\r\n        }\r\n    }\r\n\r\n    logout() {\r\n        this.setToken(null);\r\n        this.setUsuario(null);\r\n    }\r\n}\r\n","import { API_CONFIG } from './../config/api.config';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { UsuarioDTO } from './../models/usuario.dto';\r\nimport { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs/Observable';\r\n\r\n\r\n@Injectable()\r\nexport class UsuarioService {\r\n\r\n    constructor(private http: HttpClient) {}\r\n\r\n    public getCurrent(): Observable<UsuarioDTO> {\r\n        return this.http.get<UsuarioDTO>(\r\n            `${API_CONFIG.baseUrl}/usuarios/self`\r\n        );\r\n    }\r\n\r\n    public ativar(token: string) {\r\n        return this.http.get(\r\n            `${API_CONFIG.baseUrl}/usuarios/ativar?token=${token}`\r\n        );\r\n    }\r\n}\r\n","// The file contents for the current environment will overwrite these during build.\r\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\r\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\r\n// The list of which env maps to which file can be found in `.angular-cli.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.log(err));\r\n"],"sourceRoot":""}